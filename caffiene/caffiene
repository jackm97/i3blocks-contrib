#!/usr/bin/env python3

import os
import json


def enable():
    if os.environ["DESKTOP_SESSION"] == "i3" or os.environ["DESKTOP_SESSION"] == "/usr/share/xsessions/i3":
        os.system(
            "xautolock -disable && xset -dpms && notify-send --app-name=caffeine -u low ' Caffeine Mode Enabled' -h string:x-canonical-private-synchronous:lock-notify -t 1500")
    elif os.environ["DESKTOP_SESSION"] == "sway" or os.environ["DESKTOP_SESSION"] == "/usr/share/wayland-sessions/sway":
        os.system(
            "pkill swayidle && notify-send --app-name=caffeine -u low ' Caffeine Mode Enabled' -h string:x-canonical-private-synchronous:lock-notify -t 1500")


def disable():
    if os.environ["DESKTOP_SESSION"] == "i3" or os.environ["DESKTOP_SESSION"] == "/usr/share/xsessions/i3":
        os.system(
            "xautolock -enable && xset +dpms && notify-send --app-name=caffeine -u low ' Caffeine Mode Disabled' -h string:x-canonical-private-synchronous:lock-notify -t 1500")
    elif os.environ["DESKTOP_SESSION"] == "sway" or os.environ["DESKTOP_SESSION"] == "/usr/share/wayland-sessions/sway":
        os.system("swaymsg \"exec --no-startup-id sh $HOME/.config/sway/swayidle-start.sh\" && notify-send --app-name=caffeine -u low ' Caffeine Mode Disabled' -h string:x-canonical-private-synchronous:lock-notify -t 1500")


def toggle():
    '''Returns True if Dunst is muted'''
    path = os.path.split(os.path.abspath(__file__))[0]
    cache = os.path.join(path, '.cache')
    enabled = 1
    if os.path.exists(cache):
        with open(cache, 'r') as f:
            enabled = int(f.readline())

    if enabled == 0:
        enable()
        with open(cache, 'w') as f:
            f.write('1\n')
        return ""
    else:
        disable()
        with open(cache, 'w') as f:
            f.write('0\n')
        return ""


if __name__ == "__main__":
    CAF_COLOR = "#BE616E"
    if "CAF_COLOR" in os.environ.keys():
        CAF_COLOR = str(os.environ['CAF_COLOR'])
    DECAF_COLOR = "#A4B98E"
    if "DECAF_COLOR" in os.environ.keys():
        DECAF_COLOR = str(os.environ['DECAF_COLOR'])

    sym = toggle()

    RTN = {"full_text": f"<span font='Font Awesome 5 Free Solid' color='{DECAF_COLOR}'>{sym}</span>"}

    print(json.dumps(RTN))
